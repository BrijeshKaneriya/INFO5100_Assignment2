/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;
import java.io.File;
import java.io.IOException;
import java.util.Date;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Employee;
import model.EmployeeHistory;

/**
 *
 * @author DKapoor
 */
public class ViewJPanel extends javax.swing.JPanel {

    EmployeeHistory history;
    public ViewJPanel(EmployeeHistory history) {
        this.history = history;
        initComponents();
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jNameTxtField = new javax.swing.JTextField();
        jEmailAddressTxtField = new javax.swing.JTextField();
        jMobileNumberTxtField = new javax.swing.JTextField();
        jPhotoLabel = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jEmpIdTxtField = new javax.swing.JTextField();
        jLevelTxtField = new javax.swing.JTextField();
        jAgeTxtField = new javax.swing.JTextField();
        jGenderTxtField = new javax.swing.JTextField();
        jTitleLabel = new javax.swing.JLabel();
        jNameLabel = new javax.swing.JLabel();
        jEmployeeIdLabel = new javax.swing.JLabel();
        jAgeLabel = new javax.swing.JLabel();
        jGenderLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTeamInfoTxtField = new javax.swing.JTextField();
        jPosTitleTxtField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jEmployeeTable = new javax.swing.JTable();
        jViewButton = new javax.swing.JButton();
        jDeleteButton = new javax.swing.JButton();
        jUpdateButton = new javax.swing.JButton();
        jStartDateTxtField = new com.toedter.calendar.JDateChooser();

        setPreferredSize(new java.awt.Dimension(800, 645));
        setRequestFocusEnabled(false);

        jEmailAddressTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEmailAddressTxtFieldActionPerformed(evt);
            }
        });

        jPhotoLabel.setPreferredSize(new java.awt.Dimension(100, 250));
        jPhotoLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPhotoLabelMouseClicked(evt);
            }
        });

        jLabel9.setText("Position Title");

        jLabel10.setText("Email Address");

        jLabel11.setText("Mobile Number");

        jLabel12.setText("Photo");

        jTitleLabel.setFont(new java.awt.Font("Segoe UI Symbol", 1, 18)); // NOI18N
        jTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jTitleLabel.setText("View employee records");

        jNameLabel.setText("Name");

        jEmployeeIdLabel.setText("Employee ID");

        jAgeLabel.setText("Age");

        jGenderLabel.setText("Gender");

        jLabel6.setText("Start Date");

        jLabel7.setText("Level");

        jLabel8.setText("Team Information");

        jEmployeeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Employee ID", "Age", "Position Title", "Email Address", "Phone Number", "Gender", "Level", "Team Info"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jEmployeeTable);

        jViewButton.setText("View");
        jViewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jViewButtonActionPerformed(evt);
            }
        });

        jDeleteButton.setText("Delete");
        jDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDeleteButtonActionPerformed(evt);
            }
        });

        jUpdateButton.setText("Update");
        jUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jUpdateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTitleLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jEmployeeIdLabel)
                    .addComponent(jAgeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jGenderLabel)
                    .addComponent(jLabel6)
                    .addComponent(jLabel12)
                    .addComponent(jNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jEmpIdTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jAgeTxtField)
                            .addComponent(jGenderTxtField)
                            .addComponent(jNameTxtField)
                            .addComponent(jStartDateTxtField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTeamInfoTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLevelTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPosTitleTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jEmailAddressTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jMobileNumberTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jViewButton)
                        .addGap(34, 34, 34)
                        .addComponent(jUpdateButton)
                        .addGap(34, 34, 34)
                        .addComponent(jDeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPhotoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(118, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jAgeTxtField, jEmailAddressTxtField, jEmpIdTxtField, jGenderTxtField, jLevelTxtField, jMobileNumberTxtField, jNameTxtField, jPosTitleTxtField, jTeamInfoTxtField});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jAgeLabel, jEmployeeIdLabel, jGenderLabel, jLabel10, jLabel11, jLabel12, jLabel6, jLabel8, jLabel9});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jDeleteButton, jUpdateButton, jViewButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jViewButton)
                    .addComponent(jDeleteButton)
                    .addComponent(jUpdateButton))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jNameLabel)
                    .addComponent(jNameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLevelTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jEmployeeIdLabel)
                    .addComponent(jEmpIdTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jTeamInfoTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jAgeLabel)
                    .addComponent(jAgeTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jPosTitleTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jGenderLabel)
                    .addComponent(jGenderTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jEmailAddressTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(jLabel11)
                        .addComponent(jMobileNumberTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jStartDateTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jPhotoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(70, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jEmailAddressTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEmailAddressTxtFieldActionPerformed
    }//GEN-LAST:event_jEmailAddressTxtFieldActionPerformed

    private void jViewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jViewButtonActionPerformed
        if (jEmployeeTable.getRowCount() == 0){
            JOptionPane.showMessageDialog(this, "There is no record available");
        }
        else{
            int rowIndex = jEmployeeTable.getSelectedRow();
            if (rowIndex < 0){
                JOptionPane.showMessageDialog(this, "Please select a row to view.");
            }
            else{
                DefaultTableModel model = (DefaultTableModel) jEmployeeTable.getModel();
                Employee selectedEmployee = (Employee)model.getValueAt(rowIndex, 0);

                jNameTxtField.setText(selectedEmployee.getName());
                jEmpIdTxtField.setText(String.valueOf(selectedEmployee.getEmployeeId()));
                jAgeTxtField.setText(String.valueOf(selectedEmployee.getAge()));
                jPosTitleTxtField.setText(selectedEmployee.getPositionTitle());
                jLevelTxtField.setText(selectedEmployee.getLevel());
                jTeamInfoTxtField.setText(selectedEmployee.getTeamInfo());
                jEmailAddressTxtField.setText(selectedEmployee.getEmailAddress());
                jMobileNumberTxtField.setText(selectedEmployee.getPhoneNumber());
                jGenderTxtField.setText(selectedEmployee.getGender());
                jStartDateTxtField.setDate(selectedEmployee.getStartDate());
//                jStartDateTxtField.setText(String.valueOf(selectedEmployee.getStartDate()));
                jPhotoLabel.setIcon(selectedEmployee.getPhoto());
            }
        }
    }//GEN-LAST:event_jViewButtonActionPerformed

    private void jDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDeleteButtonActionPerformed
        if (jEmployeeTable.getRowCount() == 0){
            JOptionPane.showMessageDialog(this, "Table is empty");
        }
        else{
            int rowIndex = jEmployeeTable.getSelectedRow();
            if (rowIndex < 0){
                JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            }
            else{
                DefaultTableModel model = (DefaultTableModel)jEmployeeTable.getModel();
                Employee selectedEmployee = (Employee)model.getValueAt(rowIndex, 0);

                history.deleteEmployee(selectedEmployee);
                JOptionPane.showMessageDialog(this, "Employee record deleted.");
                populateTable();
                
                jNameTxtField.setText("");
                jEmpIdTxtField.setText("");
                jAgeTxtField.setText("");
                jGenderTxtField.setText("");
                jStartDateTxtField.setDate(null);
                jLevelTxtField.setText("");
                jTeamInfoTxtField.setText("");
                jPosTitleTxtField.setText("");
                jEmailAddressTxtField.setText("");
                jMobileNumberTxtField.setText("");
                jPhotoLabel.setIcon(null);
            }
        }
    }//GEN-LAST:event_jDeleteButtonActionPerformed

    private void jUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jUpdateButtonActionPerformed
          if (jNameTxtField.getText().equals("")){
              JOptionPane.showMessageDialog(null, "Please select a employee");
          }
          else{
                DefaultTableModel model = (DefaultTableModel)jEmployeeTable.getModel();
                int rowIndex = jEmployeeTable.getSelectedRow();
                Employee selectedEmployee = (Employee)model.getValueAt(rowIndex, 0);
                
                if(validInput()){
                    String name = jNameTxtField.getText();
                    String empId = jEmpIdTxtField.getText();
                    String age = jAgeTxtField.getText();
                    String posTitle = jPosTitleTxtField.getText();
                    String level = jLevelTxtField.getText();
                    String teamInfo = jTeamInfoTxtField.getText();
                    String emailAddress = jEmailAddressTxtField.getText();
                    String mobileNumber = jMobileNumberTxtField.getText();
                    String gender = jGenderTxtField.getText();
                    Date startDate = jStartDateTxtField.getDate();
                    
                    selectedEmployee.setName(name);
                    selectedEmployee.setEmployeeId(Integer.valueOf(empId));
                    selectedEmployee.setAge(Integer.valueOf(age));
                    selectedEmployee.setGender(gender);
                    selectedEmployee.setLevel(level);
                    selectedEmployee.setPositionTitle(posTitle);
                    selectedEmployee.setTeamInfo(teamInfo);
                    selectedEmployee.setEmailAddress(emailAddress);
                    selectedEmployee.setPhoneNumber(mobileNumber);
                    selectedEmployee.setStartDate(startDate);
                    selectedEmployee.setPhoto((ImageIcon)(jPhotoLabel.getIcon()));

                    populateTable();
                    
                    jNameTxtField.setText("");
                    jEmpIdTxtField.setText("");
                    jAgeTxtField.setText("");
                    jGenderTxtField.setText("");
                    jStartDateTxtField.setDate(null);
                    jLevelTxtField.setText("");
                    jTeamInfoTxtField.setText("");
                    jPosTitleTxtField.setText("");
                    jEmailAddressTxtField.setText("");
                    jMobileNumberTxtField.setText("");
                    jPhotoLabel.setIcon(null);
            
                    JOptionPane.showMessageDialog(this, "Employee Information Updated!");
                }
         
       }
    }//GEN-LAST:event_jUpdateButtonActionPerformed

    private void jPhotoLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPhotoLabelMouseClicked
        JFileChooser img_upload = new JFileChooser();
        img_upload.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int result = img_upload.showDialog(null, "Choose my file");
        if (result == JFileChooser.APPROVE_OPTION) {
            File file = img_upload.getSelectedFile();
            
            try {
                  jPhotoLabel.setIcon(new ImageIcon(ImageIO.read(file).getScaledInstance(91, 94, 65)));
            } catch (IOException e) {
                JOptionPane.showMessageDialog(this, "Error while saving image.");
            }
        }
        else{
                JOptionPane.showMessageDialog(this, "Upload is cancelled.");
            }
    }//GEN-LAST:event_jPhotoLabelMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jAgeLabel;
    private javax.swing.JTextField jAgeTxtField;
    private javax.swing.JButton jDeleteButton;
    private javax.swing.JTextField jEmailAddressTxtField;
    private javax.swing.JTextField jEmpIdTxtField;
    private javax.swing.JLabel jEmployeeIdLabel;
    private javax.swing.JTable jEmployeeTable;
    private javax.swing.JLabel jGenderLabel;
    private javax.swing.JTextField jGenderTxtField;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jLevelTxtField;
    private javax.swing.JTextField jMobileNumberTxtField;
    private javax.swing.JLabel jNameLabel;
    private javax.swing.JTextField jNameTxtField;
    private javax.swing.JLabel jPhotoLabel;
    private javax.swing.JTextField jPosTitleTxtField;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser jStartDateTxtField;
    private javax.swing.JTextField jTeamInfoTxtField;
    private javax.swing.JLabel jTitleLabel;
    private javax.swing.JButton jUpdateButton;
    private javax.swing.JButton jViewButton;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) jEmployeeTable.getModel();
        model.setRowCount(0);
        for (Employee emp : history.getHistory()){
            Object[] row = new Object[9];
            row[0] = emp;
            row[1] = emp.getEmployeeId();
            row[2] = emp.getAge();
            row[3] = emp.getPositionTitle();
            row[4] = emp.getEmailAddress();
            row[5] = emp.getPhoneNumber();
            row[6] = emp.getGender();
            row[7] = emp.getLevel();
            row[8] = emp.getTeamInfo();
            
            model.addRow(row);
        }
    }
    
    private boolean validInput() {
        Boolean flag=false;
        if (!jEmpIdTxtField.getText().matches("\\d+")){
            JOptionPane.showMessageDialog(null, "Please enter employee's ID in numbers");
            jEmpIdTxtField.requestFocus();
        }
        
        else if (! jAgeTxtField.getText().matches("\\d+")){
            JOptionPane.showMessageDialog(null, "Please enter employee's age in numbers");
            jAgeTxtField.requestFocus();
        }
        
        else if ((!jGenderTxtField.getText().equalsIgnoreCase("female")) & (!jGenderTxtField.getText().equalsIgnoreCase("male")) &
                (!jGenderTxtField.getText().equalsIgnoreCase("other")) ){
            JOptionPane.showMessageDialog(null, "Please select gender from given options");
        }
        
        else if (!jEmailAddressTxtField.getText().matches("^[a-zA-Z0-9_!#$%&'*+/=?`{|}~^.-]+@[a-zA-Z0-9.-]+$")){
            JOptionPane.showMessageDialog(null, "Please enter correct email address");
            jEmailAddressTxtField.requestFocus();
        }
        else{
            flag = true;
        }
        return flag;
    }

    
 }


